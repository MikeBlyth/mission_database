<script>
$(function() {
$( "#tabs" ).tabs();
});
</script>
- @member = @record
- @head = @member
- @head_pers = @member.personnel_data || PersonnelData.new
<div >

<div id="tabs">
<ul>
<li><a href="#tabs-member">Member</a></li>
<li><a href="#tabs-personnel">Personnel</a></li>
<li><a href="#tabs-health">Health</a></li>
</ul>
= form_for :head do |member|
  #tabs-member
    %table.new_family
      %tr
        %td
          = member.label :last_name,"", :class=>'required'
          %br
          = member.text_field :last_name, :class=> "last_name-input"
        %td
          = member.label :first_name,"", :class=>'required'
          %br
          = member.text_field :first_name, :class=> "first_name-input"
        %td
          = member.label :middle_name
          %br
          = member.text_field :middle_name, :class=> "middle_name-input"
        %td
          = member.label :short_name
          %br
          = member.text_field :short_name, :class=> "short_name-input"
        %td
          = member.label :sex, :class=>'required'
          %br
          = member.select(:sex, [['Female','F'], ['Male','M']], {:include_blank => true} )
      %tr
        %td
          .birth_date        
            = member.label :birth_date, :class => 'birth_date-input'
            %br
            = member.text_field  :birth_date, :class => 'birth_date-input date_picker '
        %td
          .country
            = member.label :country_id
            %br
            - choices = options_from_collection_for_select(Country.where('include_in_selection').select('id, name').order('name'), :id, :name, @head[:country_id])
            = member.select(:country_id, choices, {:include_blank => true }, :class=>'wide-input')    
      %tr
        %td
          = member.label :name, "Full name of individual", :class=>'required'
          %br
          = member.text_field :name, :class=> "name-input"
          %br
          %p.description Must be unique
          %td
            = label_tag :head_status_id, "Field status"
            %br
            - choices = options_from_collection_for_select(Status.select('id, description').order('description'), :id, :description, @head[:status_id])
            = member.select(:status_id, choices, {:include_blank => true }, :class=>'medium-input')    
      %tr
        %td
          = member.label :ministry_id, "Ministry"
          %br
          - choices = options_from_collection_for_select(Ministry.select('id, description').order('description'), :id, :description, @head[:ministry_id])
          = member.select(:ministry_id, choices, {:include_blank => true }, :class=>'wide-input')    
        %td
          = member.label :work_location_id, "Ministry location"
          %br
          - choices = options_from_collection_for_select(Location.select('id, description').order('description'), :id, :description, @head[:work_location_id])
          = member.select(:work_location_id, choices, {:include_blank => true }, :class=>'ministry_location-input')    
        %td{:colspan=>'2'}
          = member.label :ministry_comment, "Ministry comments"
          %br
          = member.text_field :ministry_comment, :class=>'ministry_comments'   
      %tr
        %td
          = label :head_contact, :phone_1, "Phone on field"
          %br
          = text_field :head_contact, :phone_1, :class=>'phone-input'
        %td
          = label :head_contact, :email_1, "Email 1"
          %br
          = text_field :head_contact, :email_1
        %td{:colspan=>'2'}
          = member.label :temporary_location, "Temporary location"
          %br
          = member.text_field :temporary_location, :class=>'temporary_location-input'
      %tr
        %td
          = label :head_contact, :phone_2, "Phone 2"
          %br
          = text_field :head_contact, :phone_2, :class=>'phone-input'
        %td
          = label :head_contact, :email_2, "Email 2"
          %br
          = text_field :head_contact, :email_2
        %td
          = member.label :temporary_location_from_date, "Temp. loc. start date"
          %br
          = member.text_field:temporary_location_from_date, :class => 'active_date-input date_picker '
        %td
          = member.label :temporary_location_until_date, "Until"
          %br
          = member.text_field :temporary_location_until_date, :class => 'active_date-input date_picker '
  #tabs-personnel
    %table.new_family
      %tr
        %td
          = label_tag :head_pers_date_active, "Date active with SIM"
          %br
          = text_field :head_pers,  :date_active, :class => 'date_active-input date_picker '
        %td
          = label_tag :head_pers_est_end_of_service, "Est. end of service"
          %br
          = text_field :head_pers,  :est_end_of_service, :class => 'active_date-input date_picker '
        %td
          = label_tag :head_pers_employment_status_id, "Employment status"
          %br
          - choices = options_from_collection_for_select(EmploymentStatus.where('current_use AND (child = ? OR child is ?)', false, nil).select('id, description').order('description'), :id, :description, @head_pers[:employment_status_id])
          = select(:head_pers, :employment_status_id, choices, {:include_blank => true }, :class=>'medium-input')    
      %tr
        %td
          .education
            = label :head_pers, :education_id
            %br
            - choices = options_from_collection_for_select(Education.select('id, description').order('description'), :id, :description, @head_pers[:education_id])
            = select(:head_pers, :education_id, choices, {:include_blank => true }, :class=>'medium-input')    
        %td
          .qualifications
            = label :head_pers, :qualifications
            %br
            = text_field :head_pers, :qualifications, :class=> 'medium-input'
      %tr
        %td{:colspan=>'3'}
          = label_tag :head_pers_comments, "Personnel comments"
          %br
          = text_area :head_pers,  :comments, :cols=>60, :rows=>5
        
  #tabs-health
    - column = columns.find {|c| c.label == 'Health data'}
    - renders_as = column_renders_as(column) 
    %li{:class=>"sub-form #{active_scaffold_config_for(column.association.klass).subform.layout}-sub-form #{column.css_class unless column.css_class.nil? || column.css_class.is_a?(Proc)} id=#{sub_form_id(:association => column.name)}"}
      = render :partial => form_partial_for_column(column, renders_as), :locals => { :column => column }


